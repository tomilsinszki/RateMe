{% extends '::base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}

    <link  rel="stylesheet" type="text/css" media="screen" href="{{ asset('bundles/acmequiz/css/style.css') }}" />

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('bundles/acmequiz/js/jquery.timer.js') }}" type="text/javascript"></script>

    <script type="text/javascript">

    var seconds = 30;
    var currentQuestionId, remainedQuestionIds = [];
    var countdown, timer, buttons, question, questionNum, answers;
    var questions = {{ questions|json_encode()|raw }};

    var evaluatedAnswerTemplate =
        '<div class="answer-box">\
			<div class="answer-right ###BADorRIGHT###"><div><\/div><\/div>\
			<h2>###Q_NUM###<\/h2>\
			<p>###Q###<\/p>\
			<p><b>Helyes válasz: ###A###<\/b><\/p>\
		<\/div>';

    $(document).ready(function() {
        setupRemainedQuestionIds();
        cacheDomElements();
        initEventHandlers();

        showQuestionWithAnswers(true);
        initTimer();
    });

    function setupRemainedQuestionIds() {
        for (var i in questions) {
            remainedQuestionIds.push(i);
        }
    }

    function cacheDomElements() {
        countdown = $('#timer-bg');
        buttons = $('div.option-btn');
        question = $('#question');
        questionNum = $('#questionNum');
        answers = $('p.answer');
    }

    function initEventHandlers() {
        $('div.question-card').on('click', function() {
            uncheckButtons();
            var givenAnswer = $(this).find('div.option-btn').addClass('on').nextAll('p.answer').html();
            questions[currentQuestionId].GIVEN_ANSWER = givenAnswer;
        });
    }

    function initTimer() {
        timer = $.timer(timerHandler, 1000, true);
    }

    function timerHandler() {
        --seconds;
        countdown.html('00:' + String(seconds).lpad('0', 2));
        if (seconds === 0) {
            evaluateQuiz();
        }
    }

    function evaluateQuiz() {
        timer.stop();

        // evaluation
        var correctAnswerNum = 0;
        var ev = $('#evaluation');
        var c, g, t, i = 1;
        for (var id in questions) {
            if (!('GIVEN_ANSWER' in questions[id])) {
                break;
            }
            c = questions[id].CORRECT_ANSWER;
            g = questions[id].GIVEN_ANSWER;
            t = evaluatedAnswerTemplate;
            if (c === g && id !== currentQuestionId) {
                t = t.replace('###BADorRIGHT###', 'good');
                ++correctAnswerNum;
            } else {
                t = t.replace('###BADorRIGHT###', 'bad');
            }
            t = t.replace('###Q_NUM###', i).replace('###Q###', questions[id].QUESTION).replace('###A###', c);
            ev.append(t);
            ++i;
        }
        $('#correctAnswerNum', ev).html(correctAnswerNum);
        $('#questionNum', ev).html(correctAnswerNum);
        $('#quiz').hide();
        ev.show();
    }

    function showQuestionWithAnswers(showAnyway) {
        if (buttons.hasClass('on') || showAnyway === true) {
            if (remainedQuestionIds.length) {
                uncheckButtons();
                currentQuestionId = remainedQuestionIds.shift();
                var q = questions[currentQuestionId];
                question.html(q.QUESTION);
                answers = shuffle(answers);
                answers.eq(0).html(q.CORRECT_ANSWER);
                answers.eq(1).html(q.WRONG_ANSWER1);
                answers.eq(2).html(q.WRONG_ANSWER2);
                questionNum.html(parseInt(questionNum.html()) + 1);
            } else {
                evaluateQuiz();
            }
        }
    }

    function uncheckButtons() {
        buttons.removeClass('on');
    }

    function shuffle(o){
        for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
        return o;
    };

    String.prototype.lpad = function(padString, length) {
        var str = this;
        while (str.length < length)
            str = padString + str;
        return str;
    };

    </script>
{% endblock %}

{% block body %}
    {{ parent() }}

    <div id="quiz" class="container">
    	<div class="stopper">
    		<div id="timer-bg">00:30</div>
    	</div>
    	<div class="wrapper">
    		<h2><span id="questionNum">0</span>.</h2>
    		<h4 id="question"></h4>
    		<div class="question-card first">
    			<div class="question-card-inner">
    				<h6>A</h6>
    				<div class="option-btn"></div>
    				<div class="clear"></div>
    				<p class="answer"></p>
    			</div>
    		</div>
    		<div class="question-card">
    			<div class="question-card-inner">
    				<h6>B</h6>
    				<div class="option-btn"></div>
    				<div class="clear"></div>
    				<p class="answer"></p>
    			</div>
    		</div>
    		<div class="question-card">
    			<div class="question-card-inner">
    				<h6>C</h6>
    				<div class="option-btn"></div>
    				<div class="clear"></div>
    				<p class="answer"></p>
    			</div>
    		</div>
    		<div class="clear"></div>
    		<div class="btn_cont yellow">
    			<div onclick="showQuestionWithAnswers();" class="btn">OK</div>
    		</div>
    	</div>
    </div>

	<div id="evaluation" class="container answers-container" style="display: none;">
		<h4>Az eredményed:</h4>
		<h3><span id="correctAnswerNum"></span> helyes válasz</h3>
	</div>

{% endblock %}